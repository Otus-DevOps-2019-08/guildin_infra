# Ansible-2
Подготовка к работе. Заплакал и закомментировал провижинеры в терраформ. Шутка, мне они никогда не нравились. В пакере я готовил образ с нужным софтом для быстрого развертывания, в терраформ их развертывал, а конфигурацию всегда хотел в ансибл.
## Плейбуки
Создадим файл reddit_app.yml, по сути являющийся плейбуком. Разберем подробнее:
cat reddit_app.yml 
```
---
- name: Configure hosts & deploy application # < Пространные имена слегка непривычны, так и хочется обозвать из описанием, но поди ж ты.
  hosts: all                                 # < 
  vars:
    mongo_bind_ip: 0.0.0.0                   # < должен быть словарь, ключ: значение | в нашем случае объявляем значение переменной, определенной в шаблоне
  tasks:                                     # < Собственно, задачи плейбука
  - name: Change mongo config file           # < Что ж имена то так описательно выглядят ((
    become: true                             # < По существу: выполнять с повышением прав.
    template:                                
      src: templates/mongod.conf.j2          # Я удивлен, что шаблон не надо обзывать пространно. Пытался, не вышло. А вот источник указывать надо, не отвертишься.
      dest: /etc/mongod.conf                 # Как и назначение. В нашем случае файл. Ой, да в unix все файл.
      mode: 0644                             # Ненавижу эти маски. Когда же я в них разберусь?!
  tags: db-tag # <-- Список тэгов для задачи # !!! Узнать, куда собачить тег. Собственно, фильтрация, не будем же мы на фронтэнд это пихать?
```

## Шаблоны
```
cat templates/mongod.conf.j2       # *.j2 conventionally обозначает что мы делаем шаблон. Это для нас, не для обработчика.
storage:
  dbPath: /var/lib/mongodb               # Куда
  journal:
    enabled: true                      

systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log

net:                                               #настройка сокета
  port: {{ mongo_port | default('27017') }}        # порт (mongo в данном случае) Смотрите, сразу определили значение по умолчанию
  bindIp: {{ mongo_bind_ip }}                      # адрес прослушивания. Здесь дефолтного значения нет, так что без указания этого в плейбуке мы ничего не сделаем. 

## Прогон плейбука
```ansible-playbook reddit_app.yml --check --limit db```

PLAY [Configure hosts & deploy application] *****************************************************************************************************************************
TASK [Gathering Facts] **************************************************************************************************************************************************
ok: [dbserver]
TASK [Change mongo config file] *****************************************************************************************************************************************
changed: [dbserver]
PLAY RECAP **************************************************************************************************************************************************************
dbserver                   : ok=2    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

## Handlers // ну где же ваши ручки, давай поднимем ручки - так делать будут таски. Сорян-борян, это stage кусок документации. 
Handlers  похожи  на  tasks,  однако  запускаются  только  по оповещению от других задач. Говоря своими словами, не являются самостоятельной сущностью, дочерни.
Запишем это в плейбук:
```
...
    notify: restart mongod # Эта строка относится к области действия одной из описанных задач. Она и содержит линк на имя хэндлера, который будем прогонять по факту выполнения задачи.
...

  handlers:
  - name: restart mongod                     # вызывали?
    become: true                             # режим господина.
    service: name=mongod state=restarted     # суть выполняемых действий.

```

## Прогон плейбука

```ansible-playbook reddit_app.yml --check --limit db```
PLAY [Configure hosts & deploy application] *****************************************************************************************************************************
TASK [Gathering Facts] **************************************************************************************************************************************************
ok: [dbserver]
TASK [Change mongo config file] *****************************************************************************************************************************************
changed: [dbserver]
RUNNING HANDLER [restart mongod] ****************************************************************************************************************************************
changed: [dbserver]
PLAY RECAP **************************************************************************************************************************************************************
dbserver                   : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   


## Настройка инстанса приложения
```
---
...
  vars:
    mongo_bind_ip: 0.0.0.0 
    db_host: 10.132.0.5                   # Сюда - адрес сервера БД
  tasks:
в  - name: Change mongo config file
    become: true
    template:
      src: templates/mongod.conf.j2
      dest: /etc/mongod.conf
      mode: 0644
    tags: db-tag # <-- Список тэгов для задачи
    notify: restart mongod
  - name: Add unit file for Puma
    become: true
    copy:
      src: files/puma.service
      dest: /etc/systemd/system/puma.service
      tags: app-tag
      notify: reloadpuma
  - name: Add config for DB connection
    template:      
      src: templates/db_config.j2
      dest: /home/appuser/db_config
      tags: app-tag
  - name: enable puma
    become: true
    systemd: name=puma enabled=yes
    tags: app-tag

  handlers:
  - name: restart mongod
    become: true
    service: name=mongod state=restarted
  - name: reload puma
    become: true
    systemd: name=puma state=restarted
```

## Деплой
Используем модули git и bundle:

